name: Check
on:
  push: {}
  pull_request:
    branches:
      - main
  schedule:
    - cron: "15 6 1,15 * *"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}
jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest", "ubuntu-latest"]
        go:
          - stable
          - "~1.24.0"
        may-fail:
          - false
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.may-fail }}
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version: "${{ matrix.go }}"
          check-latest: true
      - run: go version
      - run: go build -v ./...
      - run: go test -race -parallel 4 -timeout 30s -v ./...
  Format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version: stable
      - run: |
          unformatted=$(gofmt -l .)
          if [[ ! -z "$unformatted" ]]; then
            echo "Files need formatting!"
            gofmt -w .
            git diff
            exit 1
          fi
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - uses: golangci/golangci-lint-action@v8.0.0
  Vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-go@v5.5.0
        with:
          go-version: stable
      - run: go vet ./...
